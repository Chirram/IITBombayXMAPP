from django.shortcuts import render_to_response,redirect
from django.contrib.auth import authenticate,login,logout
from django.core.context_processors import csrf
from django.http import HttpResponse
from django.contrib.auth.models import User
from django.core.urlresolvers import reverse_lazy,re
import MySQLdb
from django.contrib.auth.decorators import login_required
from faculty import views
from faculty.apis.inputs import DatabaseConfig
def login_user(request):
	s1=request.COOKIES.get("usertype")
	#print s1
	if "usertype" in request.COOKIES:
		#print s1
		#print s1 == "instructor"
		if (s1 == "instructor"):
			print 
			response=views.faculty_index(request.COOKIES.get("user_id"))
			#return response
		elif (request.COOKIES.get("usertype")=="student"):
			#change karna padegi
			response=views.faculty_index(request.COOKIES.get("user_id"))
		elif (request.COOKIES.get("useradmin")=="admin"):
			response=views.faculty_index(request.COOKIES.get("user_id"))
			#idar tak change karna hei
		return response
	else:
		c={}
		c.update(csrf(request))
		state = "Please log in below..."
		username =''
		password = ''
		if request.POST:
			username = request.POST.get('username')
			password = request.POST.get('password')
			request_user = authenticate(username=username, password=password)
			if request_user is not None:
				if request_user.is_active:
					login(request, request_user)
					state = "You're successfully logged in!"
					db = MySQLdb.connect(DatabaseConfig.MYSQL_HOST,DatabaseConfig.MYSQL_USER,DatabaseConfig.MYSQL_PWD,DatabaseConfig.MYSQL_DB )
					cursor = db.cursor()
					query="select is_superuser,id from auth_user where username='"+username+"';"
					cursor.execute(query)
					data=cursor.fetchall()
					db.close()
					#print data
					usertype={}
					if(int(data[0][0])==1):
						usertype={"user_type":"admin","user_id":data[0][1]}
						response=render_to_response('admin.html',{'state':state,'username' : username,'usertype':usertype})
						response.set_cookie('user_id',usertype["user_id"])
						response.set_cookie('username',username)
						response.set_cookie('usertype',usertype["user_type"])
						#print usertype
						return response
					else:
						db = MySQLdb.connect(DatabaseConfig.MYSQL_HOST,DatabaseConfig.MYSQL_USER,DatabaseConfig.MYSQL_PWD,DatabaseConfig.MYSQL_DB )
						cursor = db.cursor()
						query="select count(*),a.id from auth_user a inner join student_courseaccessrole b on a.id=b.user_id where a.username='"+username+"';"
						cursor.execute(query)
						datas=cursor.fetchall()
						db.close()
						print datas
						if (int(datas[0][0])>0):
							usertype={"user_type":"instructor","user_id":datas[0][1]}
							#response=render_to_response('faculty/index.html',{'state':state,'username' : username,'usertype':usertype})
							response=faculty.views.faculty_index(str(datas[0][1]))
							response.set_cookie('user_id',usertype["user_id"])
							response.set_cookie('username',username)
							#print usertype["user_type"]
							response.set_cookie('usertype',usertype["user_type"])
							#print usertype
							return response
						else:
							usertype={"user_type":"student","user_id":data[0][1]}
							response=render_to_response('student.html',{'state':state,'username' : username,'usertype':usertype})
							response.set_cookie('user_id',usertype["user_id"])
							response.set_cookie('username',username)
							response.set_cookie('usertype',usertype["user_type"])
							#print usertype
							return response
				else:
					state = "Your account is not active, please contact the site admin."
			else:
				state = "Your username and/or password were incorrect."
	
		return render_to_response('auth.html',{'state':state, 'username': username})
def logout_user(request):
    logout(request)
    response=redirect
    response=render_to_response('success.html')
    response.delete_cookie('user_id')
    response.delete_cookie('username')
    response.delete_cookie('usertype')
    return response
